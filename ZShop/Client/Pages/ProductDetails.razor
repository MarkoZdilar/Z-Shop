@page "/product/{id:int}"
@inject IProductService ProductService
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject ICartService CartService 


<div class="media media-details">

    <div class="media-img-big-wrapper mr-2">
        <img class="media-img-big" src="@product.Image" alt="@product.Title" style="max-height: 410px; min-height: 410px; max-width: 310px;" />
    </div>
    <div class="media-body" style="padding-right:5%;">
        <h2 class="mb-0" style="text-align:center;">@product.Title</h2>
        <p>@product.Description</p>
        @if (product.Variants != null && product.Variants.Count > 0)
        {
            <div class="form-group" style="width: 30%; padding-bottom: 2.5%;">
                <select class="form-control" @bind="currentPlatformId">
                    @foreach (var variant in product.Variants)
                    {
                        <option value="@variant.PlatformId">@variant.Platform.Name</option>
                    }
                </select>
            </div>
        }
        @if (GetSelectedVariant() != null)
        {
            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
            {
                <h6 class="text-muted original-price">@GetSelectedVariant().OriginalPrice €</h6>
            }
            <h4 class="price">
                @GetSelectedVariant().Price €
            </h4>
        }
        <EditForm Model="cartItem">
            <div class="form-group">
                <InputNumber id="quantity" @bind-Value="cartItem.Quantity" class="form-control" style="width: 70px;"></InputNumber>
            </div>
        </EditForm>
        <button class="btn btn-primary" @onclick="AddToCart" style="width:40%; text-align:center;"><i class="oi oi-cart">&nbsp;&nbsp;&nbsp;Add to cart</i></button>
        <div class="views">
            <i class="oi oi-eye"></i> @product.Views.ToString("0##")
        </div>
    </div>
</div>

@code {
    private Product product = new Product();
    private int currentPlatformId = 1;

    private CartItem cartItem = new CartItem { Quantity = 1 };

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        product = await ProductService.GetProduct(Id);
        if(product.Variants.Count > 0)
        {
            currentPlatformId = product.Variants[0].PlatformId; //If there is any platform for selected product, take first as current
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.PlatformId == currentPlatformId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();

        cartItem.PlatformId = productVariant.PlatformId;
        cartItem.PlatformName = productVariant.Platform.Name;
        cartItem.Image = product.Image;
        cartItem.Price = productVariant.Price;
        cartItem.ProductId = productVariant.ProductId;
        cartItem.ProductTitle = product.Title;

        await CartService.AddToCart(cartItem);
    }
}
