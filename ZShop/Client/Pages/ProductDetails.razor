@page "/product/{id:int}"
@inject IProductService ProductService


<div class="media media-details">
    <div class="media-img-big-wrapper mr-2">
        <img class="media-img-big" src="@product.Image" alt="@product.Title" style="max-height: 360px; min-height: 360px; max-width: 300px;"/>
    </div>
    <div class="media-body" style="padding-right:5%;">
        <h2 class="mb-0">@product.Title</h2>
        <p>@product.Description</p>
        @if (product.Platforms != null && product.Platforms.Count > 0)
        {
            <div class="form-group" style="width: 20%; padding-bottom: 2.5%;">
                <select class="form-control">
                    @foreach (var platform in product.Platforms)
                    {
                        <option>@platform.Name</option>
                    }
                </select>
            </div>
        }
        @if (product.OriginalPrice > product.Price)
        {
            <h6 class="text-muted original-price">@product.OriginalPrice €</h6>
        }
        <h4 class="price">
            @product.Price €
        </h4>
        <button class="btn btn-primary"><i class="oi oi-cart">&nbsp;&nbsp;&nbsp;Add to cart</i></button>
    </div>
</div>

@code {
    private Product product = new Product();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        @*if (ProductService.Products == null || ProductService.Products.Count == 0)
        {
            ProductService.LoadProducts();
        }*@

         product = await ProductService.GetProduct(Id);
    }
}
